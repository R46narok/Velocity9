@inherits ZeroGravity.UI.Portal.Blazor.Pages.Workout.Generate.Common.DisplayComponentControl

<div class="col-7 d-flex align-items-center" style="border-top-right-radius: 20px;border-bottom-right-radius: 20px;/*background-color: #23262F;*/">
    <div class="p-5">
        <span class="fw-bold px-2 text-white" style="background-color: #9757D7;border-radius: 5px;">DEEP LEARNING</span>
        <h1 class="text-white mt-3">
            <span style="color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) ;">Fine-tune the algorithm to fit your needs.</span>
        </h1>
        <p class="mt-3" style="color: #777E90;">Our well trained recursive neural network algorithm predicts your next workout by taking into account your previous training experience.</p>
        <div class="border-1 w-50 mt-4" style="border-radius: 20px;border: 1px solid #777E90;/*border-radius: 20px;*//*border-color: white;*/">
            <div class="input-group p-1" style="/*border-radius: 20px;*//*border-color: white;*/">
                <input class="form-control bg-dark border-0 shadow-none text-white" type="text" placeholder="Workout name" @bind="Name"/>
                <button class="btn btn-primary" type="button" style="border-radius: 50px;">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="-32 0 512 512" width="1em" height="1em" fill="currentColor" style="font-size: 18px;">
                        <path d="M438.6 105.4C451.1 117.9 451.1 138.1 438.6 150.6L182.6 406.6C170.1 419.1 149.9 419.1 137.4 406.6L9.372 278.6C-3.124 266.1-3.124 245.9 9.372 233.4C21.87 220.9 42.13 220.9 54.63 233.4L159.1 338.7L393.4 105.4C405.9 92.88 426.1 92.88 438.6 105.4H438.6z"></path>
                    </svg>
                </button>
            </div>
        </div>
        <div class="border-1 mt-3 w-50" style="border-radius: 20px;border: 1px solid #777E90;/*border-radius: 20px;*//*border-color: white;*/">
            <div class="input-group p-1" style="/*border-radius: 20px;*//*border-color: white;*/">
                <input class="form-control bg-dark border-0 shadow-none text-white" type="text" placeholder="Workout description" @bind="Description">
                <button class="btn btn-primary" type="button" style="border-radius: 50px;">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="-32 0 512 512" width="1em" height="1em" fill="currentColor" style="font-size: 18px;">
                        <path d="M438.6 105.4C451.1 117.9 451.1 138.1 438.6 150.6L182.6 406.6C170.1 419.1 149.9 419.1 137.4 406.6L9.372 278.6C-3.124 266.1-3.124 245.9 9.372 233.4C21.87 220.9 42.13 220.9 54.63 233.4L159.1 338.7L393.4 105.4C405.9 92.88 426.1 92.88 438.6 105.4H438.6z"></path>
                    </svg>
                </button>
            </div>
        </div>
        <button 
            @onclick="() => ControlRequested?.Invoke()"
            class="btn btn-primary fw-bold mt-4" type="button" style="border-radius: 20px;">
            Next
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="-32 0 512 512" width="1em" height="1em" fill="currentColor" class="ms-2" style="vertical-align: sub;">
                <path d="M438.6 278.6l-160 160C272.4 444.9 264.2 448 256 448s-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L338.8 288H32C14.33 288 .0016 273.7 .0016 256S14.33 224 32 224h306.8l-105.4-105.4c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l160 160C451.1 245.9 451.1 266.1 438.6 278.6z"></path>
            </svg>
        </button>
    </div>
</div>

@code {

    [Parameter]
    public string Name
    {
        get => _name;
        set
        {
            if (_name == value) return;
            _name = value;
            NameChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<string> NameChanged { get; set; }

    private string _name;
    
    
    [Parameter]
    public string Description
    {
        get => _description;
        set
        {
            if (_description == value) return;
            _description = value;
            DescriptionChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<string> DescriptionChanged { get; set; }
    private string _description;
}