@using V9.UI.Portal.Services.Workout.Contracts
@using V9.UI.Portal.Services.Workout.Requests
@using V9.UI.Portal.Services.Workout.Views
@using V9.UI.Core.Providers
@inject ISetClient _setClient
@inject TokenAuthenticationStateProvider _authenticationProvider

@if (Edit)
{
   
    <tr>
        <td class="align-middle">@(Index + 1)</td>
        <td class="text-success align-middle">@SetView.ExerciseName</td>
        <td class="align-middle">@SetView.TargetReps</td>
        <td><input @bind="_model.CompletedReps" class="form-control" min="0" max="100" type="number"/></td>
        <td><input @bind="_model.Notes" class="form-control" placeholder=@(SetView.Notes ?? "Empty")/></td>
        <td><button class="btn bg-dark-light" style=""><svg class="text-success" style="font-size: 150%" xmlns="http://www.w3.org/2000/svg" viewBox="-64 0 512 512" width="1em" height="1em" fill="currentColor">
                                                <path d="M376.6 427.5c11.31 13.58 9.484 33.75-4.094 45.06c-5.984 4.984-13.25 7.422-20.47 7.422c-9.172 0-18.27-3.922-24.59-11.52L192 305.1l-135.4 162.5c-6.328 7.594-15.42 11.52-24.59 11.52c-7.219 0-14.48-2.438-20.47-7.422c-13.58-11.31-15.41-31.48-4.094-45.06l142.9-171.5L7.422 84.5C-3.891 70.92-2.063 50.75 11.52 39.44c13.56-11.34 33.73-9.516 45.06 4.094L192 206l135.4-162.5c11.3-13.58 31.48-15.42 45.06-4.094c13.58 11.31 15.41 31.48 4.094 45.06l-142.9 171.5L376.6 427.5z"></path>
                                            </svg></button></td>
    </tr>
}
else
{
    <tr>
        <td>@(Index + 1)</td>
        <td class="text-success">@SetView.ExerciseName</td>
        <td>@SetView.TargetReps</td>
        <td>@(SetView.CompletedReps != 0 ? SetView.CompletedReps : "-")</td>
        <td>@(SetView.Notes ?? "-")</td>
    </tr>
}


@code {
    private class SetModel
    {
        public string? Notes { get; set; }
        public int CompletedReps { get; set; }
    }
    
    [CascadingParameter]
    public SetList Parent { get; set; }
    
    [Parameter, EditorRequired]
    public SetView SetView { get; set; }

    [Parameter]
    public bool Edit { get; set; }
    
    [Parameter]
    public int Index { get; set; }
    
    [Parameter, EditorRequired]
    public string WorkoutName { get; set; }
    
    private readonly SetModel _model = new();


    protected override void OnInitialized()
    {
        _model.CompletedReps = SetView.CompletedReps;
        Parent.SaveButtonClicked += async (s, e) => await SaveChangesAsync();
    }


    private async Task SaveChangesAsync()
    {
        var request = new UpdateSetRequest(_model.Notes, _model.CompletedReps, Index, WorkoutName, "test");
        var response = await _setClient.UpdateSetAsync(request);

        if (response.IsSuccessStatusCode)
        {
            SetView.Notes = _model.Notes ?? SetView.Notes;
            SetView.CompletedReps = _model.CompletedReps;
        }
        
        StateHasChanged();
    }

}